name: Publish to PyPI 🐍 and Github

on: 
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build distribution 📦
    runs-on: windows-latest
    if: ${{ github.repository_owner == 'ulfsri' }}
    steps:
    - name: Set env
      shell: bash
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: |
          dist/
          LatestChange.md

  # publish-to-testpypi:
  #   name: Publish Python 🐍 distribution 📦 to TestPyPI
  #   needs:
  #   - build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: FIREpyDAQRelease
  #     url: https://test.pypi.org/p/firepydaq
  #   permissions:
  #     id-token: write  # IMPORTANT: mandatory for trusted publishing
  #   steps:
  #   - name: Download all the dists
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: python-package-distributions
  #   - name: Publish distribution 📦 to TestPyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       repository-url: https://test.pypi.org/legacy/
  #       skip-existing: true

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: ${{ github.repository_owner == 'ulfsri' }}
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: FIREpyDAQRelease
      url: https://pypi.org/p/firepydaq
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release :octocat:
    if: ${{ github.repository_owner == 'ulfsri' }}
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
    - name: Set release version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        # Download all by not giving any path
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          dist/*.tar.gz
          dist/*.whl
    - name: Release Assets
      uses: softprops/action-gh-release@v2
      with:
        name: FIREpyDAQ ${{ env.RELEASE_VERSION }}
        draft: true
        prerelease: false
        body_path: LatestChange.md
        files: |
          dist/**