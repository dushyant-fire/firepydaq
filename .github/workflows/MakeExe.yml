name: Releases

on:
  push:
    tags:
      - '*'

env:
  PYINSTALLER_COMPILE_BOOTLOADER: 1

jobs:
  build:
    permissions:
      contents: write
    # Should run only if commit message has 'Release' in the test
    if: ${{ contains(github.event.head_commit.message, 'Release') }}
    name: Create Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        os: [windows-latest]
    timeout-minutes: 30
    steps:
    - name: Set env
      shell: bash
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        echo "Directory list"
        ls
        pip install .
        pip list
    - name: Build windows executable
      if: runner.os == 'windows'
      working-directory: ./build-recipes
      run: |
        pip install -r build_requirements.txt
        pyinstaller -y --log-level=WARN FIREpyDAQ_NIConfigMaker.spec
        pyinstaller -y --log-level=WARN FIREpyDAQ_Acquisition.spec
    - name: Release Assets
      uses: softprops/action-gh-release@v2
      with:
        name: FIREpyDAQ ${{ env.RELEASE_VERSION }}
        draft: true
        prerelease: false
    #     body: |
            # ![](url if needed)
        files: |
          ./build-recipes/dist/*.exe